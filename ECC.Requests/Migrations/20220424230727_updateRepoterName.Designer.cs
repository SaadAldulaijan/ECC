// <auto-generated />
using System;
using ECC.Requests.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECC.Requests.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220424230727_updateRepoterName")]
    partial class updateRepoterName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Requests")
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ECC.Requests.Models.CallRequestModels.CallRequestMedicalHistory", b =>
                {
                    b.Property<int>("CallRequestId")
                        .HasColumnType("int");

                    b.Property<int>("MedicalHistoryId")
                        .HasColumnType("int");

                    b.HasKey("CallRequestId", "MedicalHistoryId");

                    b.HasIndex("MedicalHistoryId");

                    b.ToTable("CallRequestMedicalHistories", "Requests");
                });

            modelBuilder.Entity("ECC.Requests.Models.CallRequestModels.MedicalHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MedicalHistories", "Requests");
                });

            modelBuilder.Entity("ECC.Requests.Models.EmergencyCodeModels.Code", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("HasClear")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPhases")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Codes", "Requests");
                });

            modelBuilder.Entity("ECC.Requests.Models.SharedRequests.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Requests", "Requests");
                });

            modelBuilder.Entity("ECC.Requests.Models.CallRequestModels.CallRequestModel", b =>
                {
                    b.HasBaseType("ECC.Requests.Models.SharedRequests.Request");

                    b.Property<string>("OnSet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientAge")
                        .HasColumnType("int");

                    b.Property<int>("PatientMRN")
                        .HasColumnType("int");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("CallRequests", "Requests");
                });

            modelBuilder.Entity("ECC.Requests.Models.EmergencyCodeModels.EmergencyCodeRequest", b =>
                {
                    b.HasBaseType("ECC.Requests.Models.SharedRequests.Request");

                    b.Property<DateTime>("ActivatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ClearedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CodeId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Phase")
                        .HasColumnType("int");

                    b.Property<int>("ReporterExtension")
                        .HasColumnType("int");

                    b.Property<string>("ReporterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CodeId");

                    b.ToTable("EmergencyCodeRequests", "Requests");
                });

            modelBuilder.Entity("ECC.Requests.Models.CallRequestModels.CallRequestMedicalHistory", b =>
                {
                    b.HasOne("ECC.Requests.Models.CallRequestModels.CallRequestModel", "CallRequest")
                        .WithMany("CallRequestMedicalHistories")
                        .HasForeignKey("CallRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECC.Requests.Models.CallRequestModels.MedicalHistory", "MedicalHistory")
                        .WithMany("CallRequestMedicalHistories")
                        .HasForeignKey("MedicalHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CallRequest");

                    b.Navigation("MedicalHistory");
                });

            modelBuilder.Entity("ECC.Requests.Models.CallRequestModels.CallRequestModel", b =>
                {
                    b.HasOne("ECC.Requests.Models.SharedRequests.Request", null)
                        .WithOne()
                        .HasForeignKey("ECC.Requests.Models.CallRequestModels.CallRequestModel", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECC.Requests.Models.EmergencyCodeModels.EmergencyCodeRequest", b =>
                {
                    b.HasOne("ECC.Requests.Models.EmergencyCodeModels.Code", "Code")
                        .WithMany()
                        .HasForeignKey("CodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECC.Requests.Models.SharedRequests.Request", null)
                        .WithOne()
                        .HasForeignKey("ECC.Requests.Models.EmergencyCodeModels.EmergencyCodeRequest", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Code");
                });

            modelBuilder.Entity("ECC.Requests.Models.CallRequestModels.MedicalHistory", b =>
                {
                    b.Navigation("CallRequestMedicalHistories");
                });

            modelBuilder.Entity("ECC.Requests.Models.CallRequestModels.CallRequestModel", b =>
                {
                    b.Navigation("CallRequestMedicalHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
